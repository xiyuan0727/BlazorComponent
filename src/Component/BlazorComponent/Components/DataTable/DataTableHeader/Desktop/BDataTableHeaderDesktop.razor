@namespace BlazorComponent
@typeparam TDataTableHeader
@inherits ComponentPartBase<TDataTableHeader>

<thead class="@CssProvider.GetClass()">
<tr>
    @foreach (var header in Headers)
    {
        <th class="@CssProvider.GetClass("header", data: header)"
            style="@CssProvider.GetStyle("header", data: header)"
            @onclick="() => HandleOnHeaderColClick(header)">
            @if (header.Value == "data-table-select" && !SingleSelect)
            {
                @RenderPart(typeof(BDataTableHeaderSelectAll<>))
            }
            else
            {
                @if (!DisableSort && header.Sortable && header.Align == DataTableHeaderAlign.End)
                {
                    @RenderPart(typeof(BDataTableHeaderSortIcon<>))
                }
                <span>
                    @if (HeaderColContent != null)
                    {
                        @HeaderColContent(header)
                    }
                    else
                    {
                        @header.Text
                    }
                </span>
                @if (!DisableSort && header.Sortable)
                {
                    var sortIndex = Options.SortBy.IndexOf(header.Value);
                    var beingSorted = sortIndex >= 0;

                    @RenderPart(typeof(BDataTableHeaderSortIcon<>))
                    if (Options.MultiSort && beingSorted)
                    {
                        <span class="@CssProvider.GetClass("sort-badge")">
                            @(sortIndex + 1)
                        </span>
                    }
                }
                @if (ShowGroupBy && header.Groupable)
                {
                    @RenderPart(typeof(BDataTableGroupByToggle<>), header)
                }
            }
        </th>
    }
</tr>
</thead>
